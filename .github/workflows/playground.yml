name: RustDesk Multi-version Build

on:
  workflow_dispatch:

env:
  RUST_VERSION: "1.75"
  CARGO_NDK_VERSION: "3.1.2"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  TAG_NAME: "nightly"
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  VERSION: "1.4.2"
  # 写死的服务器配置
  RS_PUB_KEY: "iQX+6aUbS40CL9jJElm4jSMs8aKzePqMsFH1HACDI5E="
  RENDEZVOUS_SERVER: "nas.haydenstudio.hk"
  API_SERVER: "http://nas.haydenstudio.hk:21114"

jobs:
  build-macos-matrix:
    name: Build macOS - ${{ matrix.job.flutter }} - ${{ matrix.job.date }}
    runs-on: macos-13
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        job:
          # 版本1: Flutter 3.22.2 + 最新代码
          - {
              target: x86_64-apple-darwin,
              arch: x86_64,
              flutter: "3.22.2",
              ref: "f6509e3fd6917aa976bad2fc684182601ebf2434",
              bridge: "1.80.1",
              date: "20231219",
              extra-build-args: "",
              variant: "latest"
            }
          # 版本2: Flutter 3.19.0 + 最新代码
          - {
              target: x86_64-apple-darwin,
              arch: x86_64,
              flutter: "3.19.0",
              ref: "f6509e3fd6917aa976bad2fc684182601ebf2434",
              bridge: "1.80.1",
              date: "20231219",
              extra-build-args: "",
              variant: "stable"
            }
          # 版本3: Flutter 3.22.2 + 旧版代码
          - {
              target: x86_64-apple-darwin,
              arch: x86_64,
              flutter: "3.22.2",
              ref: "85ddfc0739f052cab0029c46b899b959ee94eeb8",
              bridge: "1.80.1",
              date: "20231119",
              extra-build-args: "",
              variant: "legacy-new"
            }
          # 版本4: Flutter 3.19.0 + 旧版代码
          - {
              target: x86_64-apple-darwin,
              arch: x86_64,
              flutter: "3.19.0",
              ref: "85ddfc0739f052cab0029c46b899b959ee94eeb8",
              bridge: "1.80.1",
              date: "20231119",
              extra-build-args: "",
              variant: "legacy-stable"
            }

    steps:
      - name: Checkout source code (Ref: ${{ matrix.job.ref }})
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.job.ref }}
          submodules: recursive

      - name: Install build dependencies
        run: |
          brew install llvm create-dmg nasm pkg-config

      - name: Setup Flutter ${{ matrix.job.flutter }}
        uses: actions/setup-flutter@v2
        with:
          flutter-version: ${{ matrix.job.flutter }}

      - name: Verify Flutter version
        run: flutter --version

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "macos-${{ matrix.job.flutter }}-${{ matrix.job.ref }}-${{ matrix.job.variant }}"

      - name: Clean Flutter build
        run: flutter clean

      - name: Install flutter_rust_bridge
        run: |
          cargo install flutter_rust_bridge_codegen --version ${{ matrix.job.bridge }} --features "uuid" --locked

      - name: Get Flutter dependencies
        run: |
          pushd flutter
          flutter pub get
          popd

      - name: Generate bridge code
        run: |
          ~/.cargo/bin/flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart \
            --c-output ./flutter/macos/Runner/bridge_generated.h

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

      - name: Install vcpkg dependencies
        run: |
          $VCPKG_ROOT/vcpkg install --x-install-root="$VCPKG_ROOT/installed"

      - name: Build RustDesk
        run: |
          ./build.py --flutter ${{ matrix.job.extra-build-args }}
        env:
          RS_PUB_KEY: ${{ env.RS_PUB_KEY }}
          RENDEZVOUS_SERVER: ${{ env.RENDEZVOUS_SERVER }}
          API_SERVER: ${{ env.API_SERVER }}

      - name: Create unsigned DMG
        run: |
          CREATE_DMG="$(command -v create-dmg)"
          CREATE_DMG="$(readlink -f "$CREATE_DMG")"
          sed -i -e 's/MAXIMUM_UNMOUNTING_ATTEMPTS=3/MAXIMUM_UNMOUNTING_ATTEMPTS=7/' "$CREATE_DMG"
          create-dmg \
            --icon "RustDesk.app" 200 190 \
            --hide-extension "RustDesk.app" \
            --window-size 800 400 \
            --app-drop-link 600 185 \
            "rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}-flutter${{ matrix.job.flutter }}-${{ matrix.job.date }}-${{ matrix.job.variant }}-unsigned.dmg" \
            ./flutter/build/macos/Build/Products/Release/RustDesk.app

      - name: Upload unsigned DMG
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: "rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}-flutter${{ matrix.job.flutter }}-${{ matrix.job.date }}-${{ matrix.job.variant }}-unsigned.dmg"

  build-android:
    name: Build Android APK
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              arch: aarch64,
              target: aarch64-linux-android,
              openssl-arch: android-arm64,
              ref: "f6509e3fd6917aa976bad2fc684182601ebf2434",
            }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.job.ref }}
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang cmake curl git g++ \
            libclang-dev llvm-dev nasm ninja-build \
            openjdk-11-jdk-headless pkg-config wget

      - name: Install Flutter
        uses: actions/setup-flutter@v2
        with:
          flutter-version: "3.22.2"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "rustfmt"

      - name: Setup Flutter Rust Bridge
        run: |
          git config --global core.longpaths true
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid" --locked
          sed -i 's/uni_links_desktop/#uni_links_desktop/g' flutter/pubspec.yaml
          pushd flutter/lib
          find . -name "*.dart" -exec sed -i 's/textScaler: TextScaler.linear(\(.*\)),/textScaleFactor: \1,/g' {} \;
          popd
          pushd flutter && flutter pub get && popd
          ~/.cargo/bin/flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true

      - name: Build Android dependencies
        run: |
          ./flutter/build_android_deps.sh arm64-v8a

      - name: Build Rust library for Android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          RS_PUB_KEY: ${{ env.RS_PUB_KEY }}
          RENDEZVOUS_SERVER: ${{ env.RENDEZVOUS_SERVER }}
          API_SERVER: ${{ env.API_SERVER }}
        run: |
          rustup target add aarch64-linux-android
          cargo install cargo-ndk --version ${{ env.CARGO_NDK_VERSION }} --locked
          ./flutter/ndk_arm64.sh
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ./target/aarch64-linux-android/release/liblibrustdesk.so \
             ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so

      - name: Build Android APK
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-11-openjdk-amd64/bin:$PATH
          # 使用调试签名配置
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so \
             ./flutter/android/app/src/main/jniLibs/arm64-v8a/
          
          pushd flutter
          flutter build apk --release --target-platform android-arm64 --split-per-abi
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk \
             ../rustdesk-${{ env.VERSION }}-arm64-${{ matrix.job.ref }}.apk
          popd

      - name: Sign APK (可选)
        if: env.ANDROID_SIGNING_KEY != null
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Android APK
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: rustdesk-${{ env.VERSION }}-arm64-${{ matrix.job.ref }}.apk
